#Module Webcamera
#------------------------------------------
module_name_hint=webcam

#module_category=Images
module_description=Capture frames from a webcamera.
module_version=1.01
module_impl=C++

#-------------------------------------------
page Main
    //General settings

#-----------------------------
in enum Capture_Source capture_source=Camera [Disable,Camera,Load_Frames]
    //Source of frames - capture frames from real camera of load images from a disk.


#-------- Camera --------------
const enum Device select_device=Default [Default,By_Index,By_Name,By_Serial]
	//Choose the way for selecting webcamera.
    
if select_device By_Index
const int Device_Index device_index=0 0:100 1,10
    //Camera index in Operating System.
endif

if select_device By_Name
const string Device_Name device_name=""
	//Name of the camera to connect (or its part). To see all - go to 'Device Info' and press the button.
endif	

if select_device By_Serial
const string Device_Serial device_serial=""
	//Serial ID of the camera (or its part). To see all - go to 'Device Info', check 'Serial' and press the button.
endif	


out object_image Image image
    //Resulted webcamera image.

out checkbox Is_New_Frame is_new_frame=0
    //Flag is true when new frame is arrived.
    
#-----------------------------
line
in group Settings settings=1
	//Setting webcamera parameters.
    
if settings 1
const enum Frame_Rate frame_rate=Camera_Default [Camera_Default,Custom,5,10,15,30,60]
    //Frame rate.
    //fps

#----------------	
if frame_rate Custom
const int Custom_Frame_Rate custom_frame_rate=30 1:1000 1,10
    //Custom frame rate.
    //fps
endif
#----------------

if settings 1    
const enum Resolution resolution=Camera_Default [Camera_Default,Custom,160_x_120,320_x_240,640_x_480,1024_x_768,1280_x_720,1920_x_1080]
    //Capture resolution.
    //pix
    
#----------------
if resolution Custom
const int Resolution_X res_x=1024 1:10000 1,20
	//Custom resolution X.
    //pixels

const int Resolution_Y res_y=768 1:10000 1,20
	//Custom resolution Y.
    //pixels
endif
#----------------

if settings 1

in enum Channels image_channels=RGB [Grayscale,RGB,BGR,RGBA,ABGR,R,G,B]
#TODO не поддерживаются каналы HSL,H,S,L
    //Desired channels of the output image.
in enum Data_Type image_data_type=u8 [u8,float]
    //Desired data type of the output image, u8=0..255, float=[0,1].

#TODO wait_frame
#in checkbox Wait_New_Frames wait_frame=0
#    //Wait while new frame arrived
#TODO: wait timeout
#TODO: automatic restart in autorestart_sec seconds
	
#TODO update mode: use consistent frame during whole update event, or update as fast as possible (not consistent, but more responsible)
#TODO callback on new frame   - as 'text' for modules list

    
endif


#-----------------------------
page Transform

in checkbox_group Transform transform=0
    //Crop, mirror and rotate the image.
    
line

if transform 1
out object_image Transformed_Image image_transformed
    //Transformed image.

line
in checkbox Crop_To_Square crop_to_square=0
    //Crop to square.

in checkbox Mirror_X mirror_x=0
    //Mirror by horizontal.
    
in enum Rotate rotate=0 [0,90,180,270]
    //Rotation.
    //deg
    

line
endif

    
#if resize_crop 1
#in enum Resize resize=No [No,Percent,Pixels]
#    //Resize image
#    #QImage scaledImage = image.scaled(imageSize, Qt::KeepAspectRatio);
#------------------
#if resize Percent
#in float Resize_Percent resize_percent=100 0:1000 0.1,10
#if resize Pixels
#in int Resize_X resize_x=1024 0:10000 1,20
#in int Resize_Y resize_y=768 0:10000 1,20
#------------------
#if resize_crop 1
#in enum Crop crop=No [No,Percent,Pixels]
#    //Crop...
#    
#endif
        
#-----------------------------
page Debug
    //Debug information.


out string Device_Name connected_device_name=""
	//Name of the connected camera.

out checkbox Is_Started is_started=0
    //Does capture started.
	
out string Frames_Captured frames_captured=""
    //How much frames were captured and processed after last start.
    
#-----------------------------
page Device_Info
    //Print list of cameras and supported formats.

in button_always Print_Devices print_devices
	//Print list of all connected devices.

#in button_always Print_USB print_usb
#	//Print USB ports details (Windows only).
# Commented, because currently Qt's cameras ID's doesn't coincide with Windows USB enumeration.
	
in checkbox Serials print_serials=1
    //Output serial ID of devices - useful if you connecting several cameras of the same model.
    
in checkbox Formats print_formats=0
	//Print list of supported formats for connected device at start.


out text Local_Console local_console 20 25
    //Console output.

	
#-----------------------------
page Resolver
    //This is capability for properly assigning several similar webcameras. See Webcamera/Webcams_resolve example for the more details.
	
const checkbox Enabled resolver_enabled=0
	//Is Resolver enabled.
	
line
if resolver_enabled 1
const int Cameras resolver_cameras=1 1:4 1,10
	//Number of connected cameras to resolve.
line
endif	

#Resolver results 
if resolver_cameras 1,2,3,4
out int Camera_1_Resulted_Index resolver_resulted_index1=0 0:* 1,10
	//Deduced index. Connect it to the index of the first Webcamera module.
endif
if resolver_cameras 2,3,4
out int Camera_2_Resulted_Index resolver_resulted_index2=0 0:* 1,10
	//Deduced index. Connect it to the index of the second Webcamera module.
endif
if resolver_cameras 3,4
out int Camera_3_Resulted_Index resolver_resulted_index3=0 0:* 1,10
	//Deduced index. Connect it to the index of the third Webcamera module.
endif
if resolver_cameras 4
out int Camera_4_Resulted_Index resolver_resulted_index34=0 0:* 1,10
	//Deduced index. Connect it to the index of the fourth Webcamera module.
endif

line

#---- Camera 1 ----
if resolver_cameras 1,2,3,4
const string Camera_1_Name_Part resolver_name1=""
	//Part of name of the camera 1.

const string Camera_1_Serials_Parts resolver_serials1=""
	//Part of serials of the camera 1, connected to different USB, with computer restarting, such as 14de4f85 2798002a 2249ee0.
line

endif

#---- Camera 2 ----
if resolver_cameras 2,3,4
const string Camera_2_Name_Part resolver_name2=""
	//Part of name of the camera 2.
const string Camera_2_Serials_Parts resolver_serials2=""
	//Part of serials of the camera 2.
line

endif

#---- Camera 3 ----
if resolver_cameras 3,4
const string Camera_3_Name_Part resolver_name3=""
	//Part of name of the camera 3.
const string Camera_3_Serials_Parts resolver_serials3=""
	//Part of serials of the camera 3.
line

endif
	
#---- Camera 4 ----
if resolver_cameras 4
const string Camera_4_Name_Part resolver_name4=""
	//Part of name of the camera 4.
const string Camera_4_Serials_Parts resolver_serials4=""
	//Part of serials of the camera 4.
line

endif
	
#--------------------
#TODO Load frames
#Load Frames --------------------------------------
#page Load_Frames
#    //Load frames from disk - simulation of camera
#    
#in enum Load_Source load_source=Folder [Folder,Single_Image]
#    //Load images from a folder or use a single image
#
#if load_source Single_Image
#in string_file Image_File load_image_file=""
#    //Image file to load.
#    //Choose an Image
#    //Images (*.jpg *.png *.bmp *.tif);; All files (*.*)
#
#if load_source Folder
#in string_folder Folder load_folder=""
#    //Folder for loading images.
#endif
    
    
#fps, original size or fixed as in web camera settings
    
#enum load_mode=off [off,each_frame]
#    //Load frames

#string load_folder=data/webcam [folder_select]
#    //Folder for loading frames

#in enum frame_method=autoincrease [autoincrease,fixed]
#    //Scan all images in folder or use fixed frame

#int frame=0 0:100000 1,10
#    //Frame number for loading frames

    
#TODO Save frames
#Save Frames --------------------------------------
#page Save_Frames
#    //Saving grabbed frames to disk - for working without camera by using "Load Frames" mode.
#    
#    
#in checkbox Save_Frames save_frames=0
#    //Save frames

#limit number of frames
#stop/write in cycle


#format for the string

#group Save
#	//Save frames



#string save_folder=data/webcam [folder_select]
#    //Folder for saving frames

#button save_btn=Save_frame
#    //Button for saving current frame

