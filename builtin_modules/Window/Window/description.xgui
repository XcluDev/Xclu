#Module Window
#------------------------------------------
#module_name_hint=wwindow
module_description=Window for placing widgets. Allows to grab content and send by NDI etc.
module_version=1.01
module_impl=C++

module_send_calls=create_widget


#------------------------------------------
page Properties
    
in string Title title="Window"
    //Title of the window.
    
#-------------
#const enum Screen screen=Default [Default,Custom]
#    //If you have several screens, you can select the screen for placing window there.
#
#if screen Custom
#const int Screen_Index screen_index=0 0:100 1,10
#    //Index of screen.
#endif    
    
#-------------
in enum Size size=640x480 [Default,Custom,640x480,800x600,1024x768,1280x720,1920x1080,1920x1200]
    //Initial size of the window.

if size Custom
in int Size_X size_x=1280 1:20000 1,10
    //Width of window.
    //pixels
in int Size_Y size_y=720 1:20000 1,10
    //Height of window.
    //pixels
    
endif
#-------------

in enum Position position=Automatic [Default,Custom,Screen_Center]
    //Initial position of the window.

#-------------
if position Custom
in int Pos_X pos_x=50 -20000:20000 1,10
    //X position of window.
    //pixels
in int Pos_Y pos_y=50 -20000:20000 1,10
    //Y position of window.
    //pixels
    
endif
#-------------
separator

in checkbox Visible visible=1
    //Is window visible.

const enum Initial_State initial_state=Normal_Window [Minimized,Normal_Window,Maximized,Full_Screen]
    //State at start - normal, full screen, minimized or maximized.
    
line

#const enum Theme theme=Standard [Standard,Dark]
#    //Theme of design.

#--------
const enum Font_Size font_size=Custom [Default,Custom]
    //Font size for elements.

if font_size Custom
const int Font_Size font_size_pix=18 1:* 1,10
    //Custom font size.
    //pixels
endif

#------------------------------------------
page Content
    //Window content can be a single rendering area, or layouts and widgets, such as WNumber.
    
const enum Content_Mode content_mode=Auto_Vertical [Auto_Vertical,Auto_Horizontal,Manual]
	//Modes for collecting layout - automatic or manual.

if content_mode Auto_Vertical,Auto_Horizontal
out text Content content_auto 20 20
    //Automatically populated layout.
endif

if content_mode Manual
const text Content content 20 20
    //Description of layouts and widgets. 
//#Keywords:  HorizontalLayout, VerticalLayout, Tab, Stretch
//#the number means stretching, indentation may be any, just consistent
//#    Simple layout of single widget:
//#VerticalLayout 1
//#  wimage1 1
//#
//#    Advanced layout:
//#HorizontalLayout
//#  Tabs 5
//#    Tab Settings
//#      HorizontalLayout
//#        wnumber1
//#        wnumber2
//#      Tab Values
//#      Tab Something_Else
//#  VerticalLayout 0
//#    wbutton1 0
//#    wbutton2 0
//#    Stretch 1
line
in button Edit... edit_btn
    //Press to interactively edit window content.
endif

line
const int Margin global_margin=0 0:* 1,10
    //Margin for layouts.

const int Spacing global_spacing=0 0:* 1,10
    //Spacing for layouts.



#---------------------------------------------------
#TODO Menu
#page Menu
#    //Here is optional window menu
   
#const checkbox Menu_Enabled menu_enabled=0
#    //Is menu enabled.
    
#--------------
#if menu_enabled 1
#const text Menu_Items menu_items 10 15
#    //Menu items list, with "--" space for indent for creating submenu
#    //#Use "--" spaces to mark submenu
#    //File
#    //--Open
#    //--Save
#    //--Exit
#    //Help
#    //--About
#endif


#---------------------------------------------------
#Actions
page Actions
    //Action on closing window.

in enum On_Close on_close=Stop [Ignore,Stop]
   //What to do when user closes the window.
#,Custom_Action]

#---------------------------------------------------
#Grab
page Grab
    //Grab window.

in checkbox Grab_CPU grab_cpu=0
    //Grab window to the raster.
    
#if grab_cpu 1
out object_image Image_CPU image_cpu
    //Grabber image.

#endif
 
    
#---------------------------------------------------

    
