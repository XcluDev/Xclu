#Module Tokenize
#------------------------------------------
module_description=Tokenize text and HTML using NLTK, readability-lxml.
module_version=1.01
module_impl=C++

#---- Input ---------------------------------------
page Input
//Input text to process.

enum Source source=Text [Text,Text_file,Var,URL,Script]
//Source of input files.

if source Text
text Text input_text 5 7
    //Input area.
    //My hope is to make it good.

if source Text_file
string_file File input_file="text.txt"
    //File name.
endif

if source Var
string_link_string Var input_var="module1->text"
    //Var name.
endif

if source URL
string URL input_url="https://example.com"
    //URL for text to download.
endif

if source Script
text Script input_script 5 7
    //Script for input.
endif

#---- Process ---------------------------------------
page Process
//Perform html cleaning using readability-lxml.

checkbox HTML_filter html_filter=1
//Filter HTML using  readability-lxml.

checkbox Extract_Paragraphs get_paragraphs=1
//Extract paragraphs.

checkbox Extract_Sentences get_sentences=1
//Extract sentences.

checkbox Tokenize tokenize=1
//Extract tokens.

checkbox Extract_Lexems get_lexems=1
//Extract lexems.

separator

enum Result result=JSON [JSON_Text,JSON_Object,Python_Generator]
//Output type - JSON Text is good for small data, JSON Object works faster, Python Generator is useful for further processing with Python.

#JSON - можно определять типы названия?

